// Generated by view binder compiler. Do not edit!
package com.nfctransaction.demo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.nfctransaction.demo.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemTransactionBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final TextView amountText;

  @NonNull
  public final TextView directionText;

  @NonNull
  public final TextView peerDeviceIdText;

  @NonNull
  public final TextView timestampText;

  @NonNull
  public final TextView transactionIdText;

  private ItemTransactionBinding(@NonNull MaterialCardView rootView, @NonNull TextView amountText,
      @NonNull TextView directionText, @NonNull TextView peerDeviceIdText,
      @NonNull TextView timestampText, @NonNull TextView transactionIdText) {
    this.rootView = rootView;
    this.amountText = amountText;
    this.directionText = directionText;
    this.peerDeviceIdText = peerDeviceIdText;
    this.timestampText = timestampText;
    this.transactionIdText = transactionIdText;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemTransactionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemTransactionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_transaction, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemTransactionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.amountText;
      TextView amountText = ViewBindings.findChildViewById(rootView, id);
      if (amountText == null) {
        break missingId;
      }

      id = R.id.directionText;
      TextView directionText = ViewBindings.findChildViewById(rootView, id);
      if (directionText == null) {
        break missingId;
      }

      id = R.id.peerDeviceIdText;
      TextView peerDeviceIdText = ViewBindings.findChildViewById(rootView, id);
      if (peerDeviceIdText == null) {
        break missingId;
      }

      id = R.id.timestampText;
      TextView timestampText = ViewBindings.findChildViewById(rootView, id);
      if (timestampText == null) {
        break missingId;
      }

      id = R.id.transactionIdText;
      TextView transactionIdText = ViewBindings.findChildViewById(rootView, id);
      if (transactionIdText == null) {
        break missingId;
      }

      return new ItemTransactionBinding((MaterialCardView) rootView, amountText, directionText,
          peerDeviceIdText, timestampText, transactionIdText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
